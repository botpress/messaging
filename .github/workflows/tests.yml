name: Tests
on: [pull_request]

jobs:
  files_changed:
    uses: 'botpress/messaging/.github/workflows/files-changed.yml@master'

  unit:
    name: Unit
    runs-on: ubuntu-latest
    needs: files_changed
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - uses: actions/setup-node@v2
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'
      - name: Fetch Node Packages
        run: |
          yarn --immutable
      - name: Run tests
        run: |
          yarn test:unit --coverage --verbose

  integration:
    name: Integration
    runs-on: ubuntu-latest
    strategy:
      matrix:
        database: ['sqlite', 'postgres']
    needs: files_changed
    if: needs.files_changed.outputs.messaging == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Set up PostgreSQL
        if: ${{ matrix.database == 'postgres' }}
        run: |
          docker run -d -p 5432:5432 \
            -e POSTGRES_PASSWORD=postgres \
            -e POSTGRES_USER=postgres \
            -e POSTGRES_DB=postgres \
            postgres:latest
      - uses: actions/setup-node@v2
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'
      - name: Fetch Node Packages
        run: |
          yarn --immutable
      - name: Await PostgreSQL
        if: ${{ matrix.database == 'postgres' }}
        timeout-minutes: 2
        run: until pg_isready -h localhost; do sleep 1; done
      - name: Run tests
        run: |
          yarn test:int --coverage --verbose
        env:
          DATABASE_URL: ${{ matrix.database == 'postgres' && 'postgres://postgres:postgres@localhost:5432' || '' }}

  e2e:
    name: E2E
    runs-on: ubuntu-latest
    strategy:
      matrix:
        database: ['sqlite', 'postgres']
    needs: files_changed
    if: needs.files_changed.outputs.messaging == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Set up PostgreSQL
        if: ${{ matrix.database == 'postgres' }}
        run: |
          docker run -d -p 5432:5432 \
            -e POSTGRES_PASSWORD=postgres \
            -e POSTGRES_USER=postgres \
            -e POSTGRES_DB=postgres \
            postgres:latest
      - uses: actions/setup-node@v2
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'
      - name: Fetch Node Packages
        run: |
          yarn --immutable
      - name: Await PostgreSQL
        if: ${{ matrix.database == 'postgres' }}
        timeout-minutes: 2
        run: until pg_isready -h localhost; do sleep 1; done
      - name: Run tests
        run: |
          yarn test:e2e --coverage --verbose
        env:
          DATABASE_URL: ${{ matrix.database == 'postgres' && 'postgres://postgres:postgres@localhost:5432' || '' }}

  security:
    name: Security
    runs-on: ubuntu-latest
    strategy:
      matrix:
        database: ['sqlite', 'postgres']
    needs: files_changed
    if: needs.files_changed.outputs.messaging == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Set up PostgreSQL
        if: ${{ matrix.database == 'postgres' }}
        run: |
          docker run -d -p 5432:5432 \
            -e POSTGRES_PASSWORD=postgres \
            -e POSTGRES_USER=postgres \
            -e POSTGRES_DB=postgres \
            postgres:latest
      - uses: actions/setup-node@v2
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'
      - name: Fetch Node Packages
        run: |
          yarn --immutable
      - name: Await PostgreSQL
        if: ${{ matrix.database == 'postgres' }}
        timeout-minutes: 2
        run: until pg_isready -h localhost; do sleep 1; done
      - name: Run tests
        run: |
          yarn test:sec --verbose
        env:
          DATABASE_URL: ${{ matrix.database == 'postgres' && 'postgres://postgres:postgres@localhost:5432' || '' }}

  migration:
    name: Migration
    runs-on: ubuntu-latest
    strategy:
      matrix:
        database: ['sqlite', 'postgres']
    needs: files_changed
    if: needs.files_changed.outputs.messaging == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Set up PostgreSQL
        if: ${{ matrix.database == 'postgres' }}
        run: |
          docker run -d -p 5432:5432 \
            -e POSTGRES_PASSWORD=postgres \
            -e POSTGRES_USER=postgres \
            -e POSTGRES_DB=postgres \
            postgres:latest
      - uses: actions/setup-node@v2
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'
      - name: Fetch Node Packages
        run: |
          yarn --immutable
      - name: Await PostgreSQL
        if: ${{ matrix.database == 'postgres' }}
        timeout-minutes: 2
        run: until pg_isready -h localhost; do sleep 1; done
      - name: Run tests
        run: |
          yarn test:mig --verbose
        env:
          DATABASE_URL: ${{ matrix.database == 'postgres' && 'postgres://postgres:postgres@localhost:5432' || '' }}

  webchat:
    name: Webchat
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: ['chrome', 'firefox']
    needs: files_changed
    if: needs.files_changed.outputs.webchat == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - uses: actions/setup-node@v2
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'
      - name: Fetch Node Packages
        run: |
          yarn --immutable

      - name: Run tests
        run: |
          yarn test:chat --browser ${{ matrix.browser }}
