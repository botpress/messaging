{
  "config": {
    "additionalDetails": "Additional Details",
    "avatarAndCover": "Avatar & Cover picture",
    "avatarUploadSuccess": "The bot avatar has been uploaded successfully. You need to save the form in order for the changes to take effect.",
    "botAvatar": "Bot Avatar",
    "botConfiguration": "Bot Configuration",
    "chooseFile": "Choose file",
    "configUpdated": "Bot configuration updated successfully",
    "confirmChangeLanguage": "Are you sure you want to change the language of your bot from {currentName} to {newName}? All of your content elements will be copied, make sure you translate them.",
    "confirmUnmount": "Are you sure want to unmount this bot? All of the functionalities of this bot will become unavailable.",
    "contactEmail": "Contact E-mail",
    "coverPicture": "Cover Picture",
    "coverUploadSuccess": "The cover picture has been uploaded successfully. You need to save the form in order for the changes to take effect.",
    "defaultLanguage": "Default language",
    "description": "Description",
    "formContainsErrors": "The form contains errors",
    "language": "Language",
    "linkToPolicy": "Link to Privacy Policy",
    "linkToTerms": "Link to Terms & Conditions",
    "phoneNumber": "Phone Number",
    "requireImageFile": "{targetProp} requires an image file",
    "supportedLanguages": "Supported languages",
    "website": "Website",
    "botId": "Bot Id",
    "copyToClipboard": "Copied to clipboard"
  },
  "contentTypes": {
    "permissionDenied": "You don't have permission to upload files for this bot. Talk to your team owner.",
    "uploadFileChoice": "Or upload a file",
    "enterUrlChoice": "Or enter the URL",
    "infoInterpreted": "This information will be interpreted:",
    "typingIndicator": "Show typing indicators",
    "useMarkdown": "Use markdown",
    "markdownHelp": "Refer to this documentation for markdown syntax: ",
    "disableFreeText": "Disable free text",
    "actionButton": {
      "buttonTitle": "Title of the button",
      "description": "A button that triggers an action, often used in cards",
      "textTitle": "Enter text or the ID of a content element (ex: #!builtin_text-myid)",
      "title": "Action Button"
    },
    "card": {
      "title": "Card",
      "actionButtons": "Card action buttons",
      "description": "A card message with a title with optional subtitle, image and action buttons."
    },
    "carousel": {
      "cards": "Carousel cards",
      "description": "A carousel is an array of cards",
      "title": "Carousel"
    },
    "image": {
      "description": "A message showing an image with an optional title",
      "imageLabel": "Title",
      "labelDesc": "Some platforms require to name the images.",
      "title": "Image",
      "uploadImage": "Upload Image"
    },
    "audio": {
      "description": "A message showing an audio file with an optional title",
      "audioLabel": "Title",
      "title": "Audio"
    },
    "video": {
      "description": "A message showing a video file with an optional title",
      "videoLabel": "Title",
      "title": "Video"
    },
    "file": {
      "description": "A message showing some file with an optional title",
      "fileLabel": "Title",
      "title": "File"
    },
    "singleChoice": {
      "choice": "Choice",
      "description": "Suggest choices to the user with the intention of picking only one (with an optional message)",
      "itemTitle": "The title of the choice (this is what gets shown to the user)",
      "itemValue": "The value that your bot gets when the user picks this choice (usually hidden from the user)",
      "title": "Single Choice"
    },
    "text": {
      "alternatives": "Alternates",
      "description": "A regular text message with optional typing indicators and alternates",
      "message": "Message"
    },
    "location": {
      "title": "Location",
      "description": "A message showing a location with an optional address and title",
      "latitude": "Latitude",
      "longitude": "Longitude",
      "address": "Address",
      "label": "Title"
    },
    "dropdown": {
      "allowCreate": "Allow creation of new options",
      "allowMultiple": "Allow multiple choices",
      "asKeyboardDesc": "It will be displayed right on top of the composer (like choices)",
      "asKeyboardTitle": "Display as keyboard",
      "buttonDesc": "When left blank, the selected option is sent when the dropdown is closed",
      "buttonText": "The text to display on the button.",
      "desc": "Displays a list of options to the user",
      "itemLabel": "The text displayed in the dropdown menu",
      "itemValue": "The value that the bot will receive (optional)",
      "optionsList": "List of options",
      "title": "Dropdown",
      "widthDesc": "The default size displays the select and the button on one line. Change it to fit your needs",
      "widthTitle": "The width of the component (in pixels)",
      "placeholderText": "Dropdown placeholder text",
      "useMarkdown": "Use markdown"
    }
  },
  "code-editor": {
    "error": {
      "cannotOpenFile": "Cannot open a file with that extension",
      "cannotSaveFile": "Could not save your file",
      "cannotUploadFile": "Cannot upload your file",
      "fileUploadDisabled": "File upload disabled by an environment variable.",
      "invalidJson": "Invalid JSON file: {details}",
      "lackUploadPermissions": "You do not have sufficient permissions to upload files",
      "missingParameters": "Missing parameters"
    },
    "fileStatus": {
      "fileInformation": "File Information",
      "fixThem": "Please make sure to fix {count, plural, one {it} other {them}} before saving.",
      "thereAreErrors": "There {count, plural, one {is} other {are}} {count} {count, plural, one {error} other {errors}} in your file.",
      "viewDetails": "View details"
    },
    "fullName": "Code Editor",
    "nameModal": {
      "chooseNameForFile": "Choose a name for the file",
      "createNewFile": "Create new file",
      "fileName": "File Name (including any directory)",
      "nameAlreadyExists": "A file with that name already exists. Please choose another one or delete it before.",
      "renameOrMoveFile": "Rename or move file"
    },
    "navigator": {
      "cannotBeEdited": "They cannot be edited directly",
      "codeSamples": "Those are code samples that you can copy",
      "codeSamples2": "to add new features to your bots.",
      "copyExample": "Copy example to my bot",
      "copyExampleToHooks": "Copy example to global hooks",
      "duplicateToCurrent": "Duplicate to current bot",
      "isReadOnly": "This file is read only",
      "noFilesFound": "No files found in this category",
      "renameMove": "Rename / Move"
    },
    "newFileModal": {
      "createForCurrent": "Create for the current bot",
      "createNew": "Create a new {name}",
      "fileName": "File name",
      "fileNameHelp": "No special characters allowed. Must end in .js"
    },
    "sidePanel": {
      "actions": "Actions",
      "bot": "Bot {name}",
      "botHooks": "Bot Hooks",
      "conf": "Configurations",
      "currentBot": "Current Bot",
      "eventHooks": "Event Hooks",
      "filterFiles": "Filter files",
      "generalHooks": "General Hooks",
      "components": "Components",
      "global": "Global",
      "hooks": "Hooks",
      "moduleConf": "Module Configurations",
      "pipelineHooks": "Pipeline Hooks",
      "rawFileEditor": "Raw File Editor"
    },
    "splash": {
      "advancedEditor": "Advanced Editor",
      "basicEditor": "Basic Editor",
      "bigWarning": "WARNING",
      "codeEditor": "Code Editor",
      "commandPalette": "Command Palette",
      "editorDesc": "Code editor allows you to create and edit actions without leaving botpress studio. It features typings and intelligent code completion. To edit global files, please use the code editor located on the admin panel",
      "newFile": "New file",
      "rawEditorDesc": "The raw file editor has no safeguards and you can easily mess important files. Handle with care! You can edit any file contained in the data folder, create new files and move existing files around.",
      "saveFile": "Save file"
    },
    "store": {
      "alreadyExists": "A file with that name already exists",
      "chooseName": "Choose the name of your {type}. No special chars. Use camel case",
      "confirmDeleteFile": "Are you sure you want to delete the file named {file}?",
      "confirmSaveFile": "Do you want to save the changes you made to {file}?",
      "fileDeleted": "File deleted successfully!",
      "fileDisabled": "File disabled successfully!",
      "fileDuplicated": "File duplicated successfully!",
      "fileEnabled": "File enabled successfully!",
      "fileRenamed": "File renamed successfully!",
      "fileSaved": "File saved successfully!",
      "fileUploaded": "File uploaded successfully!",
      "invalidFilename": "Invalid filename",
      "onlySuperAdmins": "Only Super Admins can use the raw file editor"
    },
    "uploadModal": {
      "completeFilePath": "Complete File Path",
      "filePathHelp": "Type the complete path to the file, including the extension, relative to /data",
      "overwrite": "Overwrite existing file",
      "selectFile": "Select your file",
      "uploadFile": "Upload File"
    }
  },
  "testing": {
    "fullName": "Testing"
  },
  "skills": {
    "label": "Skills",
    "callApi": "Call API",
    "choice": "Choice",
    "fullName": "Basic Skills",
    "sendEmail": "Send Email",
    "slotFilling": "Slot Filling",
    "authGate": {
      "title": "Auth Gate",
      "fullName": "Internal Users",
      "promptUnauthenticated": "Prompt for login if user is unauthenticated",
      "whenChecked": "When checked, user will be asked to login if they are not already logged in. Otherwise, it will only act as a simple gate: allow or disallow",
      "loginPromptMessage": "Login prompt message (required)",
      "selectContent": "Select a content element",
      "loginUrl": "Login URL Markdown",
      "urlTooltip": "Copy and paste that small snippet of code in your text message to display a clickable URL in the chat for users to authenticate",
      "copiedToClipboard": "Copied to clipboard",
      "inviteMessage": "Message for invite code (if rollout strategy requires it)",
      "invitePlaceholder": "Message asking for invite code",
      "retryLimit": "Retry limit for invite code",
      "loginLink": "[Login Link]({{temp.login_url}})"
    }
  },
  "nlu": {
    "autoTrain": "Auto Training",
    "cancelTraining": "Cancel Training",
    "description": "Tap + in the sidebar to define your first intent.",
    "entities": {
      "deleteMessage": "Are you sure you want to delete the entity \"{entityName}\" ?",
      "duplicate": "Duplicate Entity",
      "examplesLabel": "Matching examples",
      "examplesPlaceholder": "Add examples that match your pattern (one per line)",
      "filterPlaceholder": "Filter entities",
      "fuzzyLabel": "Fuzzy matching options",
      "fuzzyTooltip": "Fuzziness will tolerate slight errors (e.g: typos) in words of 4 characters or more. Strict means no errors allowed.",
      "loose": "Loose",
      "matchCaseLabel": "Match case",
      "matchCaseTooltip": "Whether your pattern is case sensitive",
      "matchingError": "Some examples don't match",
      "matchingSuccess": "All examples match",
      "medium": "Medium",
      "nameConflictMessage": "An entity with that name already exists. Please choose another one.",
      "nameConflictTitle": "Name already in use",
      "namePlaceholder": "Entity name",
      "new": "New entity",
      "newOccurrence": "New occurrence",
      "occurrenceLabel": "Occurrences",
      "occurrencePlaceholder": "Type a value (ex: Chicago)",
      "occurrenceTooltip": "An occurrence is a value of your entity. Each occurrence can have multiple synonyms.",
      "patternInvalid": "Invalid pattern",
      "patternLabel": "Regular expression",
      "patternPlaceholder": "Insert a valid pattern",
      "rename": "Rename Entity",
      "selectPlaceholder": "Select entities...",
      "sensitiveLabel": "Contains sensitive data",
      "sensitiveTooltip": "Sensitive information are replaced by * before being saved in the database",
      "strict": "Strict",
      "synonymPlaceholder": "Type a synonym (or more, comma separated) and hit enter",
      "title": "Entities"
    },
    "intents": {
      "actionErrorMessage": "Could not {action} intent",
      "chooseContainerLabel": "Choose a different intent for the condition",
      "contextSelectorCreateMissing": "Create \"{query}\"",
      "contextSelectorPlaceholder": "Select context...",
      "contextSelectorTooltip": "You can type in the select bar to add new contexts.",
      "createLabel": "Create intent",
      "deleteConfirmMessage": "Are you sure you want to delete the intent \"{intentName}\"?",
      "exactOnly": "exact match only",
      "filterPlaceholder": "Filter intents",
      "hintExactMatch": "This intent will use {exactOnly}. To enable machine learning, add at least {nb} more utterances.",
      "hintIgnored": "This intent will be ignored, start adding utterances to make it trainable.",
      "hintResilient": "Add {nb} more utterances to make NLU more resilient.",
      "nameDupe": "An intent with that name already exists. Please choose another one.",
      "nameLabel": "Intent Name",
      "namePlaceholder": "Choose a name for your intent",
      "new": "New intent",
      "selectIntentLabel": "Select an existing intent",
      "selectIntentNoResults": "No such intent",
      "summaryPlaceholder": "Summary of intent",
      "title": "Intents",
      "utterancePlaceholder": "Type a sentence"
    },
    "slots": {
      "createTitle": "Create a slot for your intent",
      "deleteMessage": "Are you sure you want to delete this slot and all associated tagging from all utterances?",
      "editTitle": "Edit Slot",
      "emptyState": "No slots defined for this intent",
      "entitiesLabel": "Associated Entities",
      "nameLabel": "Slot name",
      "namePlaceholder": "Type a name here",
      "new": "Create slot",
      "noSlotsToTag": "Selection can't be tagged. Define a slot first.",
      "save": "Save slot",
      "tagSelectionLabel": "Tag selection",
      "tagSelectionMessage": "Click on a slot or use numbers as keyboard shortcuts",
      "names": {
        "amountOfMoney": "amountOfMoney",
        "distance": "distance",
        "duration": "duration",
        "email": "email",
        "number": "number",
        "ordinal": "ordinal",
        "phoneNumber": "phoneNumber",
        "quantity": "quantity",
        "temperature": "temperature",
        "time": "time",
        "url": "url",
        "volume": "volume",
        "any": "any"
      }
    },
    "title": "Language Understanding",
    "trainNow": "Train now"
  },
  "qna": {
    "addNew": "Add new",
    "answer": "Answer",
    "confirmDelete": "Do you want to delete the question?",
    "context": {
      "canTypeToCreate": "You can type in the select bar to add new contexts.",
      "createQuery": "Create context",
      "filterByContexts": "Search by context",
      "selectContext": "Select context...",
      "title": "Contexts"
    },
    "contexts": "Contexts",
    "create": "Create a new Q&A",
    "edit": "Edit Q&A",
    "editor": {
      "andOr": "and / or",
      "answers": "Answers",
      "botWillSay": "Bot will say: ",
      "checkboxRequired": "Action checkbox is required",
      "duplicatesNotAllowed": "Duplicated questions aren't allowed.",
      "incorrectRedirection": "Incorrect redirection",
      "inputsRequred": "Inputs are required.",
      "missingTranslations": "Missing translations",
      "node": "Node",
      "pasteQuestionHere": "Type/Paste your questions here separated with a new line",
      "questions": "Questions",
      "redirectToFlow": "Redirect to flow",
      "typePressAddAnswer": "Type and press enter to add an answer. Use ALT+Enter for a new line"
    },
    "exportToJson": "Export to JSON",
    "form": {
      "a": "A",
      "addAnswerAlternative": "Add Answer Alternatives",
      "addContent": "Add Content",
      "addMoreQuestionsPlural": "Add {count} more questions to make your Q&A more resilient",
      "addMoreQuestionsSingular": "Add 1 more question to make your Q&A more resilient",
      "addOneItemTooltip": "Add one item first",
      "addQuestion": "Add Question",
      "addQuestionAlternative": "Add Question Alternatives",
      "cantBeSaved": "Can't be saved",
      "chatbotWillRandomlyChoose": "Chatbot will answer randomly from these alternatives",
      "confirmDeleteQuestion": "Are you sure you want to delete this question? Question and answer alternatives will be deleted as well.",
      "confirmConvertToIntent": "Are you sure you want to convert this question to intent? Answers alternatives will be deleted.",
      "copyIdToClipboard": "Copy ID to clipboard",
      "deleteQuestion": "Delete Question",
      "disabledTooltip": "This Q&A will not be displayed to users.",
      "disableQuestion": "Disable Question",
      "disableRedirection": "Disable Redirection",
      "duplicateAnswer": "You have already written this answer",
      "duplicateQuestion": "You have already written this question",
      "emptyState": "Tap + in the toolbar to add your first question.",
      "enableQuestion": "Enable Question",
      "enableRedirection": "Enable Redirection",
      "convertToIntent": "Convert To Intent",
      "idCopiedToClipboard": "ID copied to clipboard",
      "incomplete": "Incomplete",
      "incompleteTooltip": "This Q&A will use exact match only.",
      "missingAnswer": "Leaving answer field empty will disable this question.",
      "missingQuestion": "Leaving question field empty will disable this question.",
      "node": "Node",
      "noResultsFromFilters": "No questions found",
      "onlyOneLanguage": "You only have one language",
      "pickNode": "Pick a Node",
      "pickWorkflow": "Pick a Workflow",
      "q": "Q",
      "quickAddAlternative": "Press {shortcut} while inline to add new alternative quickly",
      "redirectQuestionTo": "Redirect question to",
      "redirectToWorkflow": "Redirect to Workflow",
      "translate": "Translate",
      "workflow": "Workflow",
      "writeAtLeastTwoMoreQuestions": "Write at least 2 question alternatives to enable machine learning",
      "writeFirstQuestion": "Write a sentence that your user could write to ask his/her question",
      "writeTheAnswer": "Write the answer to the question",
      "writingSameQuestion": "Writing the same question twice will disable this Q&A."
    },
    "fullName": "Q&A",
    "hint": {
      "addMoreQuestions": "Add {moreQuestions} to make your Q&A more resilient.",
      "exactMatchOnly": "exact match only",
      "moreQuestions": "{remaining} more {remaining, plural, one {question} other {questions}}",
      "willBeExact": "This Q&A will use {exactMatchOnly}. To enable machine learning, add at leastd {remaining} more {remaining, plural, one {question} other {questions}}",
      "willBeIgnored": "This Q&A will be ignored, start adding questions to make it trainable."
    },
    "import": {
      "analysis": "Analysis",
      "botContains": "The bot contains {qnaCount} questions and {cmsCount} content elements.",
      "clearQuestionsThenInsert": "Clear existing questions, then insert my new questions and create/update content elements",
      "clearQuestionsAnalyticsWarning": "Clearing questions will make them unavailable in the analytics report",
      "fileContains": "Your file contains {fileQnaCount} questions and {fileCmsCount} content elements.",
      "insertNewQuestions": "Insert the new questions from my file and create/update associated content elements",
      "notAbleToExtract": "We were not able to extract any data from your file. Either the file is empty, or it doesn't match any known format.",
      "selectJson": "Select your JSON file",
      "selectJsonHelp": "Select a JSON file exported from the module QNA. You will see a summary of modifications when clicking on Next",
      "uploadFile": "Upload File",
      "uploadStatus": "Upload status",
      "uploadSuccessful": "Upload successful",
      "whatLikeDo": "What would you like to do?"
    },
    "importJson": "Import JSON",
    "missingTranslations": "Missing translations",
    "noQuestionsYet": "No questions have been added yet.",
    "question": "Question",
    "redirectsAssociated": "There are redirects associated to this questions, you can view them in the edit form",
    "search": "Search question"
  },
  "status": {
    "disabled": "Unmounted",
    "private": "Collaborators Only",
    "public": "Published"
  },
  "statusBar": {
    "contentLanguage": "Content Language",
    "switchLang": "Change the bot content language. Currently editing: {currentLang}",
    "trainChatbot": "Train Chatbot",
    "training": "Training",
    "ready": "Ready",
    "cancelTraining": "Cancel Training",
    "trainingPending": "Training Pending",
    "canceling": "Canceling",
    "cloudEnabled": "Cloud Enabled Chatbot"
  },
  "studio": {
    "content": {
      "cloneElements": "Clone selected elements",
      "confirmDeleteItem": "Do you really want to delete {count, number} {count, plural, one {item} other {items}}?",
      "contentType": "Content Type",
      "createNew": "Create new {title}",
      "currentlySearching": "Currently Searching in",
      "deleteElements": "Delete selected elements",
      "missingClosingCurlyBrace": "Missing closing curly brace",
      "import": {
        "analysis": "Analysis",
        "clearExisting": "Clear all existing elements, then import those from my file",
        "compareNbElements": "Your file contains {fileCmsCount} content elements, while this bot contains {cmsCount} elements.",
        "import": "Import JSON",
        "missingContentTypes": "Your bot is missing these content types: {types}.",
        "notAbleToExtractData": "We were not able to extract any data from your file. Either the file is empty, or it doesn't match any known format.",
        "selectFile": "Select your JSON file",
        "selectFileMore": "Select a JSON file. It must be exported from the Content page. You will see a summary of modifications when clicking on Next",
        "updateMissing": "Update or create missing elements present in my file",
        "upload": "Upload File",
        "uploadStatus": "Upload status",
        "whatLikeDo": "What would you like to do?"
      },
      "insertVariable": "Insert Variable",
      "mustBeDefaultLang": "Content element must be created in your default language first.",
      "noContent": "There's no content here.",
      "noContentDefined": "We think you don't have any content types defined.",
      "noContentYet": "There's no content yet. You can create some using the 'Add' button.",
      "pleaseReadDoc": "Please {readTheDocs} to see how you can make use of this feature",
      "readTheDocs": "read the docs",
      "searchContent": "Search content",
      "searchIn": "Search In",
      "selectContent": "Pick Content",
      "sideBar": {
        "all": "All",
        "createNew": "Create new {name}",
        "createNewContent": "Create new content",
        "filterByType": "Filter by Content Type",
        "unregisteredWarning": "Content-types is unregistered."
      },
      "switchToDefaultLang": "Switch to {defaultLang} and start editing",
      "usageModal": {
        "contentUsage": "Content Usage",
        "node": "Node"
      },
      "contentTypeWarning": "Please note that this content-type is only supported in {channels}",
      "tripleBracesWarning": "To add unescaped / raw text here, use {{{...}}} instead of {{...}}"
    },
    "flow": {
      "invalidName": "Invalid name",
      "invalidCharacters": "The name contains reserved or invalid characters.",
      "zoomIn": "Zoom in",
      "zoomOut": "Zoom out",
      "zoomToFit": "Fit to screen",
      "flowProperties": "Flow properties",
      "addNode": "Add Node",
      "addToLibrary": "Add to library",
      "cantDeleteFailure": "You can't delete the failure node.",
      "cantDeleteStart": "You can't delete the start node.",
      "cantDeleteSuccess": "You can't delete the success node.",
      "chips": "Chips",
      "prevWorkflow": "Go to previous workflow",
      "nextWorkflow": "Go to next workflow",
      "endOfWorkflow": "End of the workflow",
      "errorOccurred": "An error occurred here",
      "condition": {
        "addCondition": "Add condition",
        "backToList": "Back to list",
        "chooseElement": "Choose an element",
        "confirmDeleteCondition": "Are you sure to delete this condition?",
        "editCondition": "Edit Condition",
        "editTriggers": "Edit Triggers",
        "listenActiveWorkflow": "Listen in active workflow",
        "listenActiveWorkflowHelp": "When enabled, this trigger will only be active when the user is in the workflow where it is located.",
        "noResults": "No results.",
        "savedAutomatically": "Changes will be saved automatically",
        "selectCondition": "Select a condition"
      },
      "copiedToBuffer": "Copied to buffer",
      "disconnectNode": "Disconnect Node",
      "editQna": "Edit Q&A",
      "errorWhileSaving": "There was an error while saving, deleting or renaming a flow. Last modification might not have been saved on server. Please reload page before continuing flow edition",
      "flowWideOnReceives": "flow-wide on {count, plural, one {receive} other {receives}}",
      "flowWideTransitions": "flow-wide {count, plural, one {transition} other {transitions}}",
      "filterNodes": "Filter Nodes",
      "highlightByName": "Highlight nodes by name",
      "logs": {
        "autoRefresh": "Auto-refresh",
        "downloadArchives": "Download log archive",
        "loadMore": "Load more"
      },
      "module": {
        "learnMore": "Learn more",
        "notFound": "Module not found",
        "notProperlyRegistered": "The module is not properly registered",
        "tryingToLoad": "It seems like you are trying to load a module that has not been registered. Please make sure the module is registered then restart the bot."
      },
      "node": {
        "nodeProperties": "Node Properties",
        "actionParameters": "Action Parameters",
        "actionServer": "Action Server",
        "actionServerTooltip": "This is the action server on which the action will be executed",
        "actionToExecute": "Action to execute",
        "actionToRun": "Action to run",
        "actionInstructionParsingError": "Error while parsing instructions: {msg}",
        "actionArguments": "Called with these arguments:",
        "add": "add",
        "addAction": "Add new action",
        "nameAlreadyExists": "Can't rename node (this name already exists)",
        "emptyName": "Node name cannot be empty",
        "confirmOverwriteParameters": "Do you want to overwrite existing parameters?",
        "contentPaste": "content_paste",
        "couldNotRetrieveActionServer": "Could not retrieve action servers",
        "editAction": "Edit Action",
        "editSkill": "Edit skill",
        "end": "End",
        "chatbotExecutes": "Chatbot Executes",
        "chatbotSays": "Chatbot Says",
        "triggeredBy": "Workflow is Triggered by",
        "workflowFails": "Workflow Fails",
        "workflowSucceeds": "Workflow Succeeds",
        "errorInServer": "There seems to be an error in your Botpress server. Please contact your administrator.",
        "errorListingActions": "Error listing actions from the action server",
        "errorListingActionsMore": "There was an error while trying to get the list of actions on the selected server",
        "executeCode": "⚡ Execute code",
        "finishAddAction": "Add Action",
        "finishUpdateAction": "Update Action",
        "hasNoParameters": "This action has no parameters",
        "loadingActionServer": "Please wait, loading action servers...",
        "message": "Message",
        "messageToSend": "Message to send",
        "missingLink": "Missing Link",
        "noActionsFound": "No actions found on this action server",
        "noDescription": "No description",
        "nodeName": "Node Name",
        "onEnter": "On Enter",
        "onReceive": "On Receive",
        "return": "Return",
        "saySomething": "Say Something",
        "theBotWill": "The bot will",
        "transition": {
          "action": {
            "endFlow": "End flow",
            "returnToPreviousFlow": "Return to previous flow",
            "transitionToNode": "Transition to node",
            "transitionToSubflow": "Transition to subflow"
          },
          "condition": {
            "always": "Always",
            "intentIs": "Intent Is",
            "matchesProperty": "Matches Property",
            "rawExpression": "Raw Expression (advanced)"
          },
          "edit": "Edit condition to transition",
          "expression": "Expression (ex: !== undefined)",
          "fieldName": "Field Name (ex: nickname, age)",
          "javascriptExpression": "Javascript expression",
          "mustSelectSubflow": "You must select a subflow to transition to",
          "new": "New condition to transition",
          "noSpecific": "No specific node",
          "returnToCallingNode": "Continue calling node execution",
          "returnToCallingNodeExecute": "Execute calling node again",
          "returnToNodeCalled": "Return to node called",
          "specificNodeCalled": "Specific node",
          "showCondition": "Condition",
          "specifyCondition": "Specify a condition",
          "whenMetDo": "When condition is met, do"
        },
        "transitions": "Transitions",
        "unknownParameterType": "⚠️ Unknown parameter type ({type}). This parameter will be ignored.",
        "valuePlaceholder": "Value",
        "waitForUserMessage": "Wait for user message",
        "youCanChangeActions": "You can change how the Action is executed by providing it parameters. Some parameters are required, some are optional."
      },
      "nodeType": {
        "action": "Action",
        "execute": "Execute",
        "executeAction": "Execute Action",
        "listen": "Listen",
        "router": "Router",
        "say": "Say",
        "sendMessage": "Send Message",
        "split": "Split",
        "standard": "Standard Node",
        "trigger": "Trigger"
      },
      "nowSaveAuto": "Pssst! Flows now save automatically, no need to save anymore.",
      "removeFromLibrary": "Remove from library",
      "sessionStartsHere": "Every user session starts here",
      "setAsStart": "Set as Start Node",
      "sidePanel": {
        "confirmDeleteFlow": "Are you sure you want to delete the flow {name}",
        "createFlow": "Create Flow",
        "createNewFlow": "Create new flow",
        "duplicateFlow": "Duplicate Flow",
        "filterFlows": "Filter flows",
        "filterLibrary": "Filter library",
        "filterTopicsAndWorkflows": "Filter topics and workflows",
        "flowName": "Flow Name",
        "flowNameHelp": "It can only contain letters, numbers, underscores and hyphens. You can also use slashes to create folders (ex: myfolder/mynewflow)",
        "flowNamePlaceholder": "Choose a name for your flow",
        "importContent": "Import content",
        "nameInUse": "Name already in use",
        "nameInUseMessage": "A flow with that name already exists. Please choose another one.",
        "node": "Node",
        "renameFlow": "Rename Flow",
        "addWorkflow": "Add Workflow",
        "tapIconsToAdd": "Tap icons in the toolbar to import or add your first topic.",
        "renameWorkflow": "Rename Workflow",
        "nameWorkflow": "Name Workflow"
      },
      "skills": {
        "couldNotLoad": "Could not load skills view",
        "edit": "Edit a skill",
        "error": "ERROR – Skill \"{size}\" is an invalid size for Skill window. Valid sizes are {sizes}.",
        "generatingSkillFlow": "Generating your skill flow...",
        "insert": "Insert a new skill"
      },
      "toolbar": {
        "clickDetails": "Click for more details",
        "currentlyEditing": "{name} is currently editing this flow",
        "missingDetails": "Missing {nb} links",
        "problemsWithFlow": "There are some problems with your flow.",
        "renamingAndDeletingDisabled": "Renaming and Deleting flows is disabled",
        "somebodyIsEditing": "Somebody is editing another flow",
        "whenDiscussionTimeouts": "When a discussion timeouts (user doesn't answer in the configured timeframe) he will be redirected here.",
        "whenConversationEnds": "When a conversation ends (no transition) he will be redirected here.",
        "whenErrorEncountered": "When an error is encountered in the flow, the user is redirected here"
      },
      "transition": "Transition",
      "unauthUpdate": "Unauthorized flow update. You have insufficient role privileges to modify flows.",
      "workflow": {
        "create": "Create Workflow",
        "edit": "Edit Workflow - {name}",
        "labelHelp": "The label is a friendly name that can replace the name in the topic list",
        "name": "Workflow name"
      }
    },
    "sideBar": {
      "config": "Config",
      "content": "Content",
      "flows": "Flows",
      "nlu": "Natural language understanding"
    }
  },
  "topNav": {
    "deploy": {
      "tooltip": {
        "deployBot": "Deploy Bot",
        "lastDeploy": "Last Deployed",
        "needsTraining": "Bot Needs Training",
        "deploying": "Deploying Bot..."
      },
      "btn": "Deploy to Botpress Cloud",
      "toaster": {
        "success": "Bot has successfully been deployed",
        "info": "Bot is deploying...",
        "error": {
          "token": "Failed to authenticate with Botpress cloud",
          "introspect": "Could not fetch bot info from Botpress cloud",
          "runtimeNotReady": "We're preparing your chatbot resource. Please try again in a few minutes.",
          "default": "Bot failed to deploy"
        }
      }
    },
    "help": "Help",
    "emulator": "Emulator",
    "readDoc": "Read Documentation",
    "toggleEmulator": "{shortcut} Toggle Emulator",
    "toggleExplorer": "{shortcut} Toggle Explorer",
    "toggleDebugger": "{shortcut} Toggle Debugger",
    "salesCallToAction": "Start a free Enterprise trial",
    "salesCallToActionDescription": "Secure, scalable, entreprise-grade chatbots"
  },
  "bottomPanel": {
    "inspector": {
      "autoExpand": "Auto-expand all nodes"
    },
    "closePanel": "Close Panel",
    "logs": {
      "scrollToFollow": "Scroll to follow logs",
      "downloadLogs": "Download Logs",
      "clearHistory": "Clear log history",
      "endOfLogs": "End of logs",
      "debug": {
        "confUpdated": "Debug configuration updated successfully!"
      }
    },
    "debugger": {
      "fetchingEvent": "Fetching event...",
      "topIntents": "Top Intents",
      "topPredictions": "Top Predictions",
      "displayDebugging": "Display debugging in workflows",
      "autoFocus": "Auto-focus on new messages",
      "newSession": "Create a new session",
      "splashMessage": "Engage conversation with your chatbot and click on any message to inspect its behaviors.",
      "unauthorized": "Unauthorized",
      "unauthorizedMessage": "You lack sufficient permissions to inspect events.",
      "unauthorizedMessage2": "Permission required: write access on \"module.extensions\"",
      "settings": {
        "confUpdated": "Configuration updated successfully!",
        "confUpdatedError": "There was an error parsing your configuration. Please validate the syntax",
        "payloadSent": "Payload sent successfully!",
        "payloadSentError": "There was an error parsing your payload. Please validate the syntax",
        "editConf": "Edit Configuration",
        "editConfHelper": "Test temporary configuration changes. Refresh the page to reset.",
        "editConfPlaceholder": "Change Webchat Settings (must be valid json)",
        "saveConf": "Save Configuration",
        "sendRawPayloads": "Send Raw Payloads",
        "sendRawPayloadsHelper": "Send any valid JSON message, to test custom events, for example",
        "sendRawPayloadsPlaceholder": "Valid JSON Payload",
        "saveRawPayloads": "Send Payload",
        "alwaysShowDebugger": "Always show Debugger",
        "updateDebuggerOnNew": "Update debugger on new message",
        "userId": "User ID",
        "userIdHelper": "Changes the User ID stored on your browser",
        "userIdPlaceholder": "Your User ID",
        "authToken": "External Auth Token",
        "authTokenHelper": "It must be a valid JWT Token",
        "authTokenPlaceholder": "Token generated from your system",
        "save": "Save",
        "settings": "Settings",
        "basic": "Basic",
        "advanced": "Advanced"
      },
      "processing": {
        "afterMW": "After Middleware",
        "beforeMW": "Before Middleware",
        "received": "Event Received",
        "stateLoaded": "Loaded User State",
        "hook": "Hook",
        "mw": "Middleware",
        "dialog": "Processing Dialog",
        "action": "Action",
        "completed": "Event Processing Completed",
        "executedIn": "Executed in {n} ms",
        "type": "Type",
        "stacktrace": "Stacktrace"
      },
      "actions": {
        "say": "Say {x}",
        "startWorkflow": "Start workflow {x}",
        "goToNode": "Go to node {x}",
        "redirectTo": "Redirect to {x}",
        "continue": "Continue",
        "cancelPrompt": "Cancel Prompt",
        "informPrompt": "Inform Prompt"
      },
      "dialog": {
        "decision": "Decision",
        "suggestions": "Suggestions",
        "flowNodes": "Flow Nodes",
        "dialogManager": "Dialog Manager"
      },
      "entities": {
        "type": "Type",
        "source": "Source",
        "normalizedValue": "Normalized Value"
      },
      "inspector": {
        "copyEventPath": "Copy Event Path",
        "expandAll": "Expand All"
      },
      "notAvailable": "Not available",
      "nlu": {
        "intentsVeryClose": "Predicted intents are very close.",
        "youCanAccountForIt": "You can account for it checking the variable : ",
        "ambiguous": "Ambiguous",
        "noModel": "Failed at running NLU as no model was trained",
        "languageUnderstanding": "Language Understanding"
      },
      "slots": {
        "slot": "Slot",
        "source": "Source",
        "extracted": "Extracted",
        "value": "Value: {x}",
        "turnsAgo": "{x} turns ago",
        "thisTurn": "This turn"
      },
      "summary": {
        "cannotDisplay": "Cannot display event summary",
        "state": "State",
        "errors": "Errors"
      },
      "triggers": {
        "insideTopic": "Inside Topic",
        "outsideTopic": "Outside Topic",
        "insideWorkflow": "Inside Workflow",
        "qna": "QnA",
        "wf": "WF",
        "node": "Node"
      },
      "eventNotFound": {
        "title": "Event not found",
        "message": "The requested event was not found. Possible reasons:",
        "message2": "The Event Collector is not enabled in Botpress Config",
        "message3": "The event was pruned from the database"
      }
    }
  }
}
